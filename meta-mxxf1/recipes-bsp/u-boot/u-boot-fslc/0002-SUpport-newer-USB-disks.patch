From 88cf548b50b040320b5f5dafacc0a83731c50695 Mon Sep 17 00:00:00 2001
From: Hans Christian Lonstad <hcl@datarespons.no>
Date: Tue, 26 Mar 2019 11:16:38 +0100
Subject: [PATCH 2/6] SUpport newer USB disks

Delay USB scan after power
Allow time for devices to start up before scan.
USB storage: Reduce max blocks in transfer

Some memory sticks chokes on big transfers - for instance USB 2.0 type
Kingston DataTraveler
mxxf1: Clean up USB power sequence
Polarity now supported in baseline
---
 board/datarespons/mxxf1/mxxf1.c | 15 ++++++++++-----
 common/usb_storage.c            |  2 +-
 configs/mxxf1_defconfig         |  1 +
 configs/mxxf1_spl_defconfig     |  1 +
 4 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/board/datarespons/mxxf1/mxxf1.c b/board/datarespons/mxxf1/mxxf1.c
index 606b707288e..16e48cb72eb 100644
--- a/board/datarespons/mxxf1/mxxf1.c
+++ b/board/datarespons/mxxf1/mxxf1.c
@@ -678,6 +678,7 @@ static void setup_usb(void)
 #endif
 
 
+#if 0
 int board_ehci_hcd_init(int port)
 {
 	u32 *usbnc_usb_ctrl;
@@ -692,24 +693,27 @@ int board_ehci_hcd_init(int port)
 
 	return 0;
 }
+#endif
 
 int board_ehci_power(int port, int on)
 {
+	static int calls_to_one = 0;
 	switch (port) {
 	case 0:
 		break;
 	case 1:
 		if (on) {
 			gpio_direction_output(GPIO_USB_H1_EN, 1);
-			mdelay(10);
+			udelay(100);
 			gpio_direction_output(GPIO_USBP0_EN, 1);
-			mdelay(1);
+			udelay(100);
 			gpio_direction_output(GPIO_USBP1_EN, 1);
-			mdelay(1);
+			udelay(100);
 			gpio_direction_output(GPIO_USBP2_EN, 1);
-			mdelay(1);
+			udelay(100);
 			gpio_direction_output(GPIO_USBP3_EN, 1);
-			mdelay(10);
+			printf("Delay USB startup after power (%d)\n", calls_to_one++);
+			mdelay(1000);
 		}
 		else {
 			gpio_direction_output(GPIO_USB_H1_EN, 0);
@@ -877,6 +881,7 @@ int board_late_init(void)
 	else
 		vpd_update_eeprom(0);
 
+
 	cmd_process(0, 2, usbcmd, &rep, &ticks);
 	eeprom_get_mac_addr();
 
diff --git a/common/usb_storage.c b/common/usb_storage.c
index 9cd64744f8a..3ca348545f9 100644
--- a/common/usb_storage.c
+++ b/common/usb_storage.c
@@ -952,7 +952,7 @@ static void usb_stor_set_max_xfer_blk(struct usb_device *udev,
 	 * there is enough free heap space left, but the SCSI READ(10) and
 	 * WRITE(10) commands are limited to 65535 blocks.
 	 */
-	blk = USHRT_MAX;
+	blk = 64;
 #else
 	blk = 20;
 #endif
diff --git a/configs/mxxf1_defconfig b/configs/mxxf1_defconfig
index 5559b79645c..4f768972ede 100644
--- a/configs/mxxf1_defconfig
+++ b/configs/mxxf1_defconfig
@@ -60,3 +60,4 @@ CONFIG_VIDEO=y
 CONFIG_CONSOLE_MUX
 CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP
 CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_MXC_USB_OTG_HACTIVE=y
diff --git a/configs/mxxf1_spl_defconfig b/configs/mxxf1_spl_defconfig
index 771283d8a79..1bfba8eddfb 100644
--- a/configs/mxxf1_spl_defconfig
+++ b/configs/mxxf1_spl_defconfig
@@ -77,3 +77,4 @@ CONFIG_VIDEO=y
 CONFIG_CONSOLE_MUX
 CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP
 CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_MXC_USB_OTG_HACTIVE=y
-- 
2.25.1

